<?xml version="1.0" encoding="UTF-8"?>
<!--
  SCA4J
  Copyright (c) 2008-2012 Service Symphony Limited
 
  This proprietary software may be used only in connection with the SCA4J license
  (the ?License?), a copy of which is included in the software or may be obtained 
  at: http://www.servicesymphony.com/licenses/license.html.
 
  Software distributed under the License is distributed on an as is basis, without 
  warranties or conditions of any kind.  See the License for the specific language 
  governing permissions and limitations of use of the software. This software is 
  distributed in conjunction with other software licensed under different terms. 
  See the separate licenses for those programs included in the distribution for the 
  permitted and restricted uses of such software.
 -->
<composite xmlns="http://www.osoa.org/xmlns/sca/1.0"
           xmlns:sca="http://www.osoa.org/xmlns/sca/1.0"
           xmlns:sca4j="urn:sca4j.org"
           name="JMSTestComposite">

    <component name="ObjectWeatherTest">
        <sca4j:junit class="org.sca4j.binding.jms.test.object.ObjectWeatherTest"/>
        <reference name="weatherService">
            <binding.jms correlationScheme="RequestMsgIDToCorrelID">
                <destination name="objectServiceQueue" type="queue" create="always"/>
                <connectionFactory name="org.apache.activemq.ActiveMQConnectionFactory" create="always">
                    <property name="brokerURL">vm://broker</property>
                </connectionFactory>
                <response>
                    <destination name="clientQueue" type="queue" create="always"/>
                    <connectionFactory name="org.apache.activemq.ActiveMQConnectionFactory" create="always">
                        <property name="brokerURL">vm://broker</property>
                    </connectionFactory>
                </response>
            </binding.jms>
        </reference>
    </component>

    <component name="ObjectWeatherService">
        <implementation.java class="org.sca4j.binding.jms.test.object.WeatherServiceImpl"/>
        <service name="WeatherService">
            <binding.jms correlationScheme="RequestMsgIDToCorrelID" requires="sca:transactedOneWay.global">
                <destination name="objectServiceQueue" type="queue" create="always"/>
                <connectionFactory name="org.apache.activemq.ActiveMQXAConnectionFactory" create="always">
                    <property name="brokerURL">vm://broker</property>
                </connectionFactory>
                <response>
                    <destination name="clientQueue" type="queue" create="always"/>
                    <connectionFactory name="org.apache.activemq.ActiveMQXAConnectionFactory" create="always">
                        <property name="brokerURL">vm://broker</property>
                    </connectionFactory>
                </response>
            </binding.jms>
        </service>
    </component>


    <component name="JAXBWeatherTest">
        <sca4j:junit class="org.sca4j.binding.jms.test.jaxb.JAXBWeatherTest"/>
        <reference name="weatherService">
            <binding.jms correlationScheme="RequestMsgIDToCorrelID">
                <destination name="jaxbServiceQueue" type="queue" create="always"/>
                <connectionFactory name="org.apache.activemq.ActiveMQConnectionFactory" create="always">
                    <property name="brokerURL">vm://broker</property>
                </connectionFactory>
                <response>
                    <destination name="clientQueue" type="queue" create="always"/>
                    <connectionFactory name="org.apache.activemq.ActiveMQConnectionFactory" create="always">
                        <property name="brokerURL">vm://broker</property>
                    </connectionFactory>
                </response>
            </binding.jms>
        </reference>
        <!-- verifies the JAXB transformer interceptor is not applied for wires where the source and target are collocated-->
        <reference name="collocatedWeatherService" target="VMJAXBWeatherService"/>
    </component>

    <component name="JAXBWeatherService">
        <implementation.java class="org.sca4j.binding.jms.test.jaxb.WeatherServiceImpl"/>
        <service name="WeatherService">
            <binding.jms correlationScheme="RequestMsgIDToCorrelID" requires="sca:transactedOneWay.global">
                <destination name="jaxbServiceQueue" type="queue" create="always"/>
                <connectionFactory name="org.apache.activemq.ActiveMQXAConnectionFactory" create="always">
                    <property name="brokerURL">vm://broker</property>
                </connectionFactory>
                <response>
                    <destination name="clientQueue" type="queue" create="always"/>
                    <connectionFactory name="org.apache.activemq.ActiveMQXAConnectionFactory" create="always">
                        <property name="brokerURL">vm://broker</property>
                    </connectionFactory>
                </response>
            </binding.jms>
        </service>
    </component>

    <component name="VMJAXBWeatherService">
        <implementation.java class="org.sca4j.binding.jms.test.jaxb.WeatherServiceImpl"/>
    </component>

    <component name="PrimitiveTest">
        <sca4j:junit class="org.sca4j.binding.jms.test.primitives.PrimitiveTest"/>
        <reference name="service">
            <binding.jms correlationScheme="RequestMsgIDToCorrelID">
                <destination name="primitiveServiceQueue" type="queue" create="always"/>
                <connectionFactory name="org.apache.activemq.ActiveMQConnectionFactory" create="always">
                    <property name="brokerURL">vm://broker</property>
                </connectionFactory>
                <response>
                    <destination name="primitiveResponseQueue" type="queue" create="always"/>
                    <connectionFactory name="org.apache.activemq.ActiveMQConnectionFactory" create="always">
                        <property name="brokerURL">vm://broker</property>
                    </connectionFactory>
                </response>
            </binding.jms>
        </reference>
    </component>

    <component name="PrimitveService">
        <implementation.java class="org.sca4j.binding.jms.test.primitives.PrimitiveServiceImpl"/>
        <service name="PrimitiveService">
            <binding.jms correlationScheme="RequestMsgIDToCorrelID" requires="sca:transactedOneWay.global">
                <destination name="primitiveServiceQueue" type="queue" create="always"/>
                <connectionFactory name="org.apache.activemq.ActiveMQXAConnectionFactory" create="always">
                    <property name="brokerURL">vm://broker</property>
                </connectionFactory>
                <response>
                    <destination name="primitiveResponseQueue" type="queue" create="always"/>
                    <connectionFactory name="org.apache.activemq.ActiveMQXAConnectionFactory" create="always">
                        <property name="brokerURL">vm://broker</property>
                    </connectionFactory>
                </response>
            </binding.jms>
        </service>
    </component>

    <component name="OneWayServiceTest">
        <sca4j:junit class="org.sca4j.binding.jms.test.oneway.OneWayServiceTest"/>
        <reference name="service">
            <binding.jms correlationScheme="RequestMsgIDToCorrelID">
                <destination name="onewayServiceQueue" type="queue" create="always"/>
                <connectionFactory name="org.apache.activemq.ActiveMQConnectionFactory" create="always">
                    <property name="brokerURL">vm://broker</property>
                </connectionFactory>
            </binding.jms>
        </reference>
		<reference name="parameterHolder" target="ParameterHolder"/>
    </component>
    
    <!--  Common service -->
	<component name="ParameterHolder">
        <implementation.java class="org.sca4j.binding.jms.test.oneway.ParameterHolderImpl" />
	</component>
    
    <component name="OneWayService">
        <implementation.java class="org.sca4j.binding.jms.test.oneway.OneWayServiceImpl"/>
        <service name="OneWayService">
            <binding.jms correlationScheme="RequestMsgIDToCorrelID" requires="sca:transactedOneWay.global">
                <destination name="onewayServiceQueue" type="queue" create="always"/>
                <connectionFactory name="org.apache.activemq.ActiveMQXAConnectionFactory" create="always">
                    <property name="brokerURL">vm://broker</property>
                </connectionFactory>
            </binding.jms>
        </service>
		<reference name="parameterHolder" target="ParameterHolder"/>
    </component>

    <!--FABRICTHREE-271-->
    <!--<component name="AsyncTest">-->
    <!--<sca4j:junit class="org.sca4j.binding.jms.test.async.AsyncServiceTest"/>-->
    <!--<reference name="service">-->
    <!--<binding.jms correlationScheme="RequestMsgIDToCorrelID">-->
    <!--<destination name="asyncServiceQueue" type="queue" create="always"/>-->
    <!--<connectionFactory name="org.apache.activemq.ActiveMQConnectionFactory" create="always">-->
    <!--<property name="brokerURL">vm://broker</property>-->
    <!--</connectionFactory>-->
    <!--<response>-->
    <!--<destination name="primitiveResponseQueue" type="queue" create="always"/>-->
    <!--<connectionFactory name="org.apache.activemq.ActiveMQConnectionFactory" create="always">-->
    <!--<property name="brokerURL">vm://broker</property>-->
    <!--</connectionFactory>-->
    <!--</response>-->
    <!--</binding.jms>-->
    <!--</reference>-->
    <!--</component>-->

    <!--<component name="AsyncService">-->
    <!--<implementation.java class="org.sca4j.binding.jms.test.async.AsyncServiceImpl"/>-->
    <!--<service name="AsyncService">-->
    <!--<binding.jms correlationScheme="RequestMsgIDToCorrelID" requires="sca:transactedOneWay.global">-->
    <!--<destination name="asyncServiceQueue" type="queue" create="always"/>-->
    <!--<connectionFactory name="org.apache.activemq.ActiveMQXAConnectionFactory" create="always">-->
    <!--<property name="brokerURL">vm://broker</property>-->
    <!--</connectionFactory>-->
    <!--<response>-->
    <!--<destination name="primitiveResponseQueue" type="queue" create="always"/>-->
    <!--<connectionFactory name="org.apache.activemq.ActiveMQXAConnectionFactory" create="always">-->
    <!--<property name="brokerURL">vm://broker</property>-->
    <!--</connectionFactory>-->
    <!--</response>-->
    <!--</binding.jms>-->
    <!--</service>-->
    <!--<reference name="asyncResponse" target="AsyncTest"/>-->
    <!--</component>-->
    <!--end FABRICTHREE-271-->
</composite>
