<?xml version="1.0" encoding="UTF-8"?>
<!--

    SCA4J
    Copyright (c) 2009 - 2099 Service Symphony Ltd

    Licensed to you under the Apache License, Version 2.0 (the "License"); you may
    not use this file except in compliance with the License.  A copy of the license
    is included in this distrubtion or you may obtain a copy at

       http://www.opensource.org/licenses/apache2.0.php

    Unless required by applicable law or agreed to in writing, software distributed
    under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
    CONDITIONS OF ANY KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations under the License.

    This project contains code licensed from the Apache Software Foundation under
    the Apache License, Version 2.0 and original code from project contributors.


    Original Codehaus Header

    Copyright (c) 2007 - 2008 fabric3 project contributors

    Licensed to you under the Apache License, Version 2.0 (the "License"); you may
    not use this file except in compliance with the License.  A copy of the license
    is included in this distrubtion or you may obtain a copy at

       http://www.opensource.org/licenses/apache2.0.php

    Unless required by applicable law or agreed to in writing, software distributed
    under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
    CONDITIONS OF ANY KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations under the License.

    This project contains code licensed from the Apache Software Foundation under
    the Apache License, Version 2.0 and original code from project contributors.

    Original Apache Header

    Copyright (c) 2005 - 2006 The Apache Software Foundation

    Apache Tuscany is an effort undergoing incubation at The Apache Software
    Foundation (ASF), sponsored by the Apache Web Services PMC. Incubation is
    required of all newly accepted projects until a further review indicates that
    the infrastructure, communications, and decision making process have stabilized
    in a manner consistent with other successful ASF projects. While incubation
    status is not necessarily a reflection of the completeness or stability of the
    code, it does indicate that the project has yet to be fully endorsed by the ASF.

    This product includes software developed by
    The Apache Software Foundation (http://www.apache.org/).

-->
<composite xmlns="http://www.osoa.org/xmlns/sca/1.0"
           xmlns:sca4j="urn:sca4j.org"
           targetNamespace="urn:sca4j.org"
           name="FtpServerExtension"
           autowire="true">
    <!--
    The FTP composite has the following configurable parameters, which are sourced from the runtime domain configuration property:

    1. commandPort - the port to accept FTP commands on
    2. minPassivePort - the lowest port number for passive connections
    3. maxPassivePort - the highest port number for passive connections
    4. listenAddress - the machine address the server should bind to. Used for multi-homed machines
    5. idelTimeout - the timeout in milliseconds to use for socket connections
    -->

    <property name="config"/>

    <service name="ftpContainer" promote="DefaultFtpLetContainer/FtpLetContainer"/>
	
    <!-- FTP Server -->
    <component name="SCA4JFtpHost">
        <sca4j:implementation.system class="org.sca4j.ftp.server.host.SCA4JFtpHost"/>
        <property name="commandPort" source="$config//commandPort"/>
        <property name="listenAddress" source="$config//listenAddress"/>
        <property name="idleTimeout" source="$config//idleTimeout"/>
    </component>

    <!-- promote the reference so it can be autowired -->
    <reference name="WorkScheduler" promote="SCA4JFtpHost/workScheduler"/>

    <!-- Protocol codec factory -->
    <component name="CodecFactory">
        <sca4j:implementation.system class="org.sca4j.ftp.server.codec.CodecFactory"/>
    </component>

    <!-- FTP Handler -->
    <component name="FtpHandler">
        <sca4j:implementation.system class="org.sca4j.ftp.server.host.FtpHandler"/>
    </component>

    <!-- USER Request Handler -->
    <component name="UserRequestHandler" sca4j:key="USER">
        <sca4j:implementation.system class="org.sca4j.ftp.server.handler.UserRequestHandler"/>
    </component>

    <!-- PASS Request Handler -->
    <component name="PassRequestHandler" sca4j:key="PASS">
        <sca4j:implementation.system class="org.sca4j.ftp.server.handler.PassRequestHandler"/>
    </component>

    <!-- SITE Request Handler -->
    <component name="QuoteRequestHandler" sca4j:key="SITE">
        <sca4j:implementation.system class="org.sca4j.ftp.server.handler.SiteRequestHandler"/>
    </component>

    <!-- PASV Request Handler -->
    <component name="PasvRequestHandler" sca4j:key="PASV">
        <sca4j:implementation.system class="org.sca4j.ftp.server.handler.PasvRequestHandler"/>
        <property name="listenAddress" source="$config//listenAddress"/>
        <property name="idleTimeout" source="$config//idleTimeout"/>
    </component>

    <!-- STOR Request Handler -->
    <component name="StorRequestHandler" sca4j:key="STOR">
        <sca4j:implementation.system class="org.sca4j.ftp.server.handler.StorRequestHandler"/>
        <property name="idleTimeout" source="$config//idleTimeout"/>
    </component>

    <!-- QUIT Request Handler -->
    <component name="QuitRequestHandler" sca4j:key="QUIT">
        <sca4j:implementation.system class="org.sca4j.ftp.server.handler.QuitRequestHandler"/>
    </component>

    <!-- LIST Request Handler -->
    <component name="ListRequestHandler" sca4j:key="LIST">
        <sca4j:implementation.system class="org.sca4j.ftp.server.handler.ListRequestHandler"/>
    </component>

    <!-- CWD Request Handler -->
    <component name="CwdRequestHandler" sca4j:key="CWD">
        <sca4j:implementation.system class="org.sca4j.ftp.server.handler.CwdRequestHandler"/>
    </component>

    <!-- TYPE Request Handler -->
    <component name="TypeRequestHandler" sca4j:key="TYPE">
        <sca4j:implementation.system class="org.sca4j.ftp.server.handler.TypeRequestHandler"/>
    </component>

    <!-- PWD Request Handler -->
    <component name="PwdRequestHandler" sca4j:key="PWD">
        <sca4j:implementation.system class="org.sca4j.ftp.server.handler.PwdRequestHandler"/>
    </component>

    <!-- CWD Request Handler -->
    <component name="SystRequestHandler" sca4j:key="SYST">
        <sca4j:implementation.system class="org.sca4j.ftp.server.handler.SystRequestHandler"/>
    </component>

    <!-- RETR Request Handler -->
    <component name="RetrRequestHandler" sca4j:key="RETR">
        <sca4j:implementation.system class="org.sca4j.ftp.server.handler.RetrRequestHandler"/>
        <property name="idleTimeout" source="$config//idleTimeout"/>
    </component>

    <!-- User Manager -->
    <component name="FileSystemUserManager">
        <sca4j:implementation.system class="org.sca4j.ftp.server.security.FileSystemUserManager"/>
        <property name="users" source="$config//users/*"/>
        <property name="userFile" source="$config//userFile"/>
    </component>

    <!-- Passive Connection Service -->
    <component name="PassiveConnectionService">
        <sca4j:implementation.system class="org.sca4j.ftp.server.passive.PassiveConnectionServiceImpl"/>
        <property name="minPort" source="$config//minPassivePort"/>
        <property name="maxPort" source="$config//maxPassivePort"/>
    </component>

    <!-- FtpLet container -->
    <component name="DefaultFtpLetContainer">
        <sca4j:implementation.system class="org.sca4j.ftp.server.ftplet.DefaultFtpLetContainer"/>
    </component>

</composite>
